struct GaussianElimination {
	static const int SZ = 33*4;

	int N;
	double A[SZ][SZ] ={};
	double b[SZ] ={};


	void multiplyRow(int i, double by) {
		for (int j=0; j<N; j++) A[i][j] *= by;
		b[i] *= by;
	}
	void addRow(int iSrc, int iDst) {
		for (int j=0; j<N; j++) A[iDst][j] += A[iSrc][j];
		b[iDst] += b[iSrc];
	}

	void solve() {
		for (int j=0; j<N; j++) {
			for (int i=0; i<N; i++) if (i!=j) if (A[i][j]) {
				multiplyRow(j, -A[i][j]/A[j][j]);
				addRow(j, i);
			}
			multiplyRow(j, 1/A[j][j]);
		}
	}


	void print() {
		for (int i=0; i<N; i++) {
			for (int j=0; j<N; j++) printf("\t%.2lf ", A[i][j]);
			printf("\t%.2lf", b[i]);
			printf("\n");
		}
	}
};