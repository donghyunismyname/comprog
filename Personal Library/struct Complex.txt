struct Complex {
	double x, y;

	Complex operator+(Complex rhs) const {
		return{ x + rhs.x, y + rhs.y };
	}
	Complex operator-(Complex rhs) const {
		return{ x - rhs.x, y - rhs.y };
	}
	Complex operator*(Complex rhs) const {
		return{ x*rhs.x - y*rhs.y, x*rhs.y + y*rhs.x };
	}
	Complex operator*(double c) const {
		return{ x*c, y*c };
	}
	Complex operator/(Complex rhs) const {
		return *this * rhs.inverse();
	}


	Complex inverse() const {
		return{ x / (x*x + y*y), -y / (x*x + y*y) };
	}
	Complex rotate(double theta) const {
		return *this * unit(theta);
	}
	double length() const {
		return sqrt(x*x + y*y);
	}
	double angle() const {
		return atan2(y, x);
	}

	static Complex unit(double theta) {
		return{ cos(theta), sin(theta) };
	}
};