struct LongestIncreasingSubsequence {
	// Find the length of othe longest strictly increasing subsequence which is not neccessarily contiguous
	int solve(const vector<int> seq) const {
		vector<int> last;
		for (int a : seq) {
			auto it = lower_bound(last.begin(), last.end(), a);
			if (it == last.end())
				last.push_back(a);
			else
				*it = a;
		}

		return last.size();
	}

	int solveForMonotone(const vector<int> seq) const {
		vector<int> last;
		for (int a : seq) {
			auto it = upper_bound(last.begin(), last.end(), a);
			if (it == last.end())
				last.push_back(a);
			else
				*it = a;
		}

		return last.size();
	}
};